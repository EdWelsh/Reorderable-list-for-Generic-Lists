using UnityEditor;
using UnityEngine;
using UnityEditorInternal;
using System.Collections;

[CustomEditor (typeof(myClass))]
public class myClassEditor : Editor
{
 
	myClass _target;
	private ReorderableList _myList;


	public void OnEnable ()
	{

		_target = (myClass)target;

		_myList = new ReorderableList (serializedObject, serializedObject.FindProperty ("myList"), true, true, true, true);

		_myList.drawHeaderCallback = rect => {
			EditorGUI.LabelField (rect, "My Reorderable List", EditorStyles.boldLabel);
		};

		_myList.drawElementCallback = 
			(Rect rect, int index, bool isActive, bool isFocused) => {
			var element = _myList.serializedProperty.GetArrayElementAtIndex (index);
			rect.y += 2;
			EditorGUI.ObjectField (new Rect (rect.x, rect.y, rect.width, EditorGUIUtility.singleLineHeight), element, GUIContent.none);
		};
	}

	public override void OnInspectorGUI ()
	{
		serializedObject.Update ();
		_myList.DoLayoutList ();
		serializedObject.ApplyModifiedProperties ();
	}
}
